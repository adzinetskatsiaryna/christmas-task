{"version":3,"sources":["components/startPage.tsx","api/api.ts","redux/utils.ts","redux/toysReducer.ts","components/filtredToys.tsx","components/multiRangeSlider.tsx","components/popup.tsx","assets/svg/search.svg","components/searchInput.tsx","components/selectorToys.tsx","components/toysPage.tsx","components/snow.tsx","components/audio.mp3","components/christmasTreePage.tsx","components/routs.tsx","components/header.tsx","components/footer.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["StartPage","className","to","TOYS_PATH","instance","axios","create","baseURL","api","get","filterObj","array","filters","keys","Object","filter","key","hasOwnProperty","x","elem","reduce","flag","includes","serch","t","name","toLowerCase","initialState","selectedArr","filtredArr","count","toys","getToys","dispatch","then","res","type","data","filteredArr","catch","error","console","log","ToysReducer","state","action","filtres","selectedToy","newArr","isSelected","find","num","isSelect","map","FiltredToys","props","forms","el","i","isClicked","path","onClick","form","filterForm","colors","value","color","onChange","e","filterColor","currentTarget","checked","onChangeColor","isChecked","sizes","size","filterSize","isLike","filterFavorite","MultiRangeSlider","min","max","useState","minVal","setMinVal","maxVal","setMaxVal","minValRef","useRef","maxValRef","range","getPercent","useCallback","Math","round","useEffect","current","minPercent","maxPercent","style","left","width","ref","event","target","toString","classnames","Popup","handleClose","content","SearchInput","setValue","toLocaleLowerCase","trim","searchToys","placeholder","src","search","alt","SortToys","onChangeSortType","ToysPage","year","shape","favorite","setFiltres","useDispatch","useSelector","store","filtredArrFromRedux","setFiltredArr","setIsLike","setSizes","setForms","setColors","forEach","length","setFiltresArrAC","filterCount","counts","push","prevState","filterYear","setFilter","isOpen","setIsOpen","isActive","setIsActive","changeFilter","isLik","mapNewForms","s","mapNewColors","c","mapNewSizes","mapArrSizes","mapArrColors","mapArrForms","sort","a","b","setSelectedTuysAC","Snow","TreePage","id","background","setBackground","tree","bgAsString","Number","localStorage","getItem","bg","setBg","treeNumAsString","treeNum","setTreeNum","Boolean","isPlaing","setIsplaing","Audio","url","audio","load","isSnow","setIsSnow","arrForDropAsString","arr","JSON","parse","arrForDrop","setArrForDrop","toysArrForDrag","slice","stringify","isPlaingAsString","setItem","saveState","currentToy","setCurrentToy","board","setBoard","setKey","dragStartHandler","toy","allowDrop","preventDefault","dropHandler","width1","document","querySelector","offsetWidth","width2","width3","width4","clientX","y","clientY","window","scrollY","pause","play","clear","mapTree","onChangeTree","mapBg","onChangeBg","backgroundImage","onDragOver","onDrop","coords","useMap","onDragStart","dragOverHandler","top","position","dropForLi","random","draggable","START_PATH","TREE_PATH","Routs","exact","render","Header","doc","linksCount","links","URL","startsWith","href","classList","add","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bfe628d0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { TOYS_PATH } from \"./routs\";\r\nimport \"./start.css\"\r\n\r\nconst StartPage = ()=>{\r\n   \r\n   return (\r\n        <div className=\"start-wrapper\">\r\n           <div className=\"start-container\">\r\n               <h2 className=\"start-title\">Помогите бабушке нарядить елку</h2>\r\n               \r\n                  <NavLink to={TOYS_PATH} className=\"start-link\">Начать</NavLink>\r\n                  \r\n           </div>         \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default StartPage","import axios from 'axios'\r\n\r\nexport const instance = axios.create({\r\n    baseURL:'https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/data.json'\r\n});\r\n\r\n\r\nexport const api = {\r\n    getToys(){\r\n        return instance.get(``)\r\n    }\r\n}","import { filtersType } from \"../components/toysPage\";\r\nimport { ToyType } from \"./toysReducer\";\r\n\r\nexport function filterObj(array:Array<ToyType> = [], filters: filtersType = {}) {\r\n    const keys = Object.keys(filters).filter(key => filters.hasOwnProperty(key));\r\n    let x = array.filter(elem => {\r\n        \r\n        const commonKeys = keys.filter(key => elem.hasOwnProperty(key));\r\n        return  commonKeys.reduce((flag, key) => !!(flag && filters[key as keyof filtersType]?.includes(elem[key as keyof ToyType]as never)), true as boolean);\r\n    })\r\n    if(filters.serch){\r\n      x= x.filter(t=>t.name.toLowerCase().includes(filters.serch as string))\r\n    }\r\n    return x\r\n}","import { type } from \"os\";\r\nimport { Dispatch } from \"redux\";\r\nimport { api } from \"../api/api\";\r\nimport { filtersType } from \"../components/toysPage\";\r\nimport { filterObj } from \"./utils\";\r\n\r\nexport type ToyType = {\r\n    num: string\r\n    name: string\r\n    count: string  | number\r\n    year: string\r\n    shape: string\r\n    color: string\r\n    size: string\r\n    favorite: boolean\r\n    isSelect: boolean\r\n}\r\n\r\nexport type InitialState = {\r\n  selectedArr: Array<ToyType> ,\r\n  filtredArr : Array<ToyType>,\r\n  count: number | null\r\n  toys : Array<ToyType>\r\n}\r\n\r\n \r\n\r\nconst initialState: InitialState = {\r\n  selectedArr: [],\r\n  filtredArr :[],\r\n  count: null,\r\n  toys: []\r\n \r\n}\r\n\r\n\r\nconst ToysReducer = (state: InitialState = initialState, action: ActionType): InitialState =>{\r\n   switch (action.type) {\r\n     \r\n     case 'SET_TOYS' : \r\n     return {\r\n       ...state,\r\n       toys: action.toys\r\n     };\r\n\r\n    case 'SET_FILTERED_ARR':\r\n      return {\r\n      ...state,\r\n      filtredArr:action.filteredArr           \r\n    };\r\n\r\n    case 'SET_FILTERS_ARR':\r\n      return {\r\n         ...state,\r\n          filtredArr: filterObj(state.toys, action.filtres)\r\n      };\r\n      case 'RESET_SETTINGS':\r\n        return {\r\n           ...state,\r\n            filtredArr: state.toys\r\n        };\r\n\r\n    case 'ADD_DELETE_SELECTED_TOYS':\r\n  \r\n      let selectedToy: ToyType | undefined\r\n      let newArr: Array<ToyType> = []\r\n      if(action.isSelected){\r\n        // debugger\r\n        selectedToy = state.filtredArr.find(t=>t.num===action.num)\r\n        if(selectedToy){\r\n          newArr = [...state.selectedArr, {...selectedToy, isSelect: action.isSelected}]\r\n        }\r\n        \r\n      }\r\n      if(!action.isSelected){ newArr = [...state.selectedArr.filter(t=>t.num!==action.num)]}\r\n      return {\r\n        ...state,\r\n        selectedArr: newArr, \r\n        filtredArr: [...state.filtredArr.map(t=>{\r\n          if(t.num!==action.num){\r\n            return {...t}\r\n          } else {return {...t, isSelect: action.isSelected}}\r\n        })],\r\n        toys: [...state.toys.map(t=>{\r\n          if(t.num!==action.num){\r\n            return {...t}\r\n          } else{\r\n            return {...t, isSelect: action.isSelected}}\r\n        })]   \r\n      };  \r\n       default: return state\r\n   }\r\n   \r\n};\r\n\r\nexport const setSelectedTuysAC = (num:string, isSelected: boolean)=>(\r\n  {\r\n    type: 'ADD_DELETE_SELECTED_TOYS',\r\n    num, \r\n    isSelected\r\n  } as const\r\n)\r\nexport const setToysAC = (toys: Array<ToyType>)=>(\r\n  {\r\n      type: 'SET_TOYS',\r\n      toys\r\n  } as const\r\n)\r\nexport const setFilteredArrAC = ( filteredArr: Array<ToyType>)=>(\r\n  {\r\n      type: 'SET_FILTERED_ARR',\r\n      filteredArr\r\n  } as const\r\n)\r\n\r\nexport const setFiltresArrAC = (filtres:filtersType)=>(\r\n  {\r\n      type: 'SET_FILTERS_ARR',\r\n      filtres\r\n  } as const\r\n)\r\nexport const resetSettingsAC = ()=>(\r\n  {\r\n      type: 'RESET_SETTINGS',\r\n  } as const\r\n)\r\n\r\ntype ActionType = \r\n| ReturnType<typeof setFiltresArrAC>\r\n| ReturnType<typeof resetSettingsAC>\r\n| ReturnType<typeof setFilteredArrAC>\r\n| ReturnType<typeof setToysAC>\r\n| ReturnType<typeof setSelectedTuysAC>\r\n\r\n\r\nexport const getToys = () => (dispatch: Dispatch) => {\r\n  api.getToys()\r\n      .then(res => {\r\n          dispatch(setToysAC(res.data.toys));\r\n          dispatch(setFilteredArrAC(res.data.toys))\r\n          \r\n      }).catch(error => {\r\n      console.log(error)\r\n  })\r\n};\r\n\r\nexport default ToysReducer","import React, {useState, ChangeEvent} from \"react\";\r\nimport './filtredToys.css'\r\n\r\n\r\nexport type colorType = {\r\n    color: string\r\n    isChecked: boolean\r\n    name: string\r\n}\r\nexport type colorsType = Array<colorType>\r\n\r\nexport type sizeType = {\r\n    size: string\r\n    isClicked: boolean\r\n    path: any\r\n    name: string\r\n}\r\nexport type sizesType = Array<sizeType>\r\n\r\nexport type formType = {\r\n    form: string\r\n    isClicked: boolean \r\n    path: any\r\n    name: string\r\n}\r\nexport type formsType = Array<formType>\r\n\r\nexport type PropsType={\r\n    changeFilter: (color?: string, form?: string, size?: string, isLike?: boolean)=>void\r\n    filterForm: (form:string, isClicked: boolean)=>void\r\n    filterColor: (color: string, isChecked:boolean)=>void\r\n    filterSize: (size: string, isClicked:boolean)=>void\r\n    filterFavorite:(favorite:boolean)=>void\r\n    sizes: Array<sizeType>\r\n    forms: Array<formType>\r\n    colors: Array<colorType>\r\n    isLike: boolean\r\n}\r\n\r\nconst FiltredToys = (props:PropsType)=>{\r\n\r\n    const onChangeColor = (e: ChangeEvent<HTMLInputElement>, color:string)=>{\r\n        props.filterColor(color, e.currentTarget.checked)\r\n    };\r\n\r\n    const onChangeForm = (form:string, isClicked: boolean)=>{\r\n        props.filterForm(form, isClicked)    \r\n    };\r\n\r\n    const onChangeSize = (size:string, isClicked: boolean)=>{\r\n        props.filterSize(size, isClicked)\r\n    };\r\n\r\n    const onChangeLike = (e: ChangeEvent<HTMLInputElement>)=>{\r\n        props.filterFavorite(e.currentTarget.checked)\r\n    }\r\n\r\n   return (\r\n        <div className=\"value-filtres-container\">\r\n           <h2>Фильтры по назначению</h2>\r\n           <div>\r\n                <p>Форма</p>\r\n                <ul className=\"values-filter\">\r\n                   {props.forms.map((el,i)=>{\r\n                       return <li key={i} className={el.isClicked?el.path :el.name} onClick={()=>onChangeForm(el.form, !el.isClicked)} ></li>\r\n                   })}\r\n                </ul>\r\n           </div>\r\n           <div>\r\n                <p>Цвет</p>\r\n                <ul className=\"colors-filter\">\r\n                    {props.colors.map((el, i)=>{\r\n                        return  <li key={i}><input \r\n                        type=\"checkbox\" \r\n                        value={el.color} \r\n                        onChange={(e)=>onChangeColor(e, el.color)} \r\n                        checked={el.isChecked} \r\n                        className={el.name} /></li>\r\n                    })}\r\n                </ul>\r\n           </div>\r\n           <div>\r\n                <p>Размер</p>\r\n                <ul className=\"sizes-filter\">\r\n                    {props.sizes.map((el, i)=>{\r\n                        return <li key={i} onClick={()=>onChangeSize(el.size, !el.isClicked)}  className={el.isClicked? el.path : el.name}></li>\r\n                    })}\r\n                </ul>\r\n           </div>\r\n           <div className=\"favorite-filter\">\r\n               <span>Только любимые</span>\r\n               <input type=\"checkbox\" checked={props.isLike} onChange={onChangeLike} />\r\n           </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default FiltredToys","import {\r\n    ChangeEvent,\r\n    FC,\r\n    useCallback,\r\n    useEffect,\r\n    useState,\r\n    useRef\r\n  } from \"react\";\r\n  import classnames from \"classnames\";\r\n  import \"./multiRangeSlider.css\";\r\n  \r\n  interface MultiRangeSliderProps {\r\n    min: number;\r\n    max: number;\r\n    onChange: Function;\r\n  }\r\n  \r\n  const MultiRangeSlider: FC<MultiRangeSliderProps> = ({\r\n    min,\r\n    max,\r\n    onChange\r\n  }) => {\r\n    const [minVal, setMinVal] = useState(min);\r\n    const [maxVal, setMaxVal] = useState(max);\r\n    const minValRef = useRef<HTMLInputElement>(null);\r\n    const maxValRef = useRef<HTMLInputElement>(null);\r\n    const range = useRef<HTMLDivElement>(null);\r\n  \r\n    // Convert to percentage\r\n    const getPercent = useCallback(\r\n      (value: number) => Math.round(((value - min) / (max - min)) * 100),\r\n      [min, max]\r\n    );\r\n  \r\n    // Set width of the range to decrease from the left side\r\n    useEffect(() => {\r\n      if (maxValRef.current) {\r\n        const minPercent = getPercent(minVal);\r\n        const maxPercent = getPercent(+maxValRef.current.value); // Precede with '+' to convert the value from type string to type number\r\n  \r\n        if (range.current) {\r\n          range.current.style.left = `${minPercent}%`;\r\n          range.current.style.width = `${maxPercent - minPercent}%`;\r\n        }\r\n      }\r\n    }, [minVal, getPercent]);\r\n  \r\n    // Set width of the range to decrease from the right side\r\n    useEffect(() => {\r\n      if (minValRef.current) {\r\n        const minPercent = getPercent(+minValRef.current.value);\r\n        const maxPercent = getPercent(maxVal);\r\n  \r\n        if (range.current) {\r\n          range.current.style.width = `${maxPercent - minPercent}%`;\r\n        }\r\n      }\r\n    }, [maxVal, getPercent]);\r\n  \r\n    // Get min and max values when their state changes\r\n    useEffect(() => {\r\n      onChange({ min: minVal, max: maxVal });\r\n    }, [minVal, maxVal, onChange]);\r\n  \r\n    return (\r\n      <div className=\"container\">\r\n        <input\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={minVal}\r\n          ref={minValRef}\r\n          onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n            const value = Math.min(+event.target.value, maxVal - 1);\r\n            setMinVal(value);\r\n            event.target.value = value.toString();\r\n          }}\r\n          className={classnames(\"thumb thumb--zindex-3\", {\r\n            \"thumb--zindex-5\": minVal > max - 100\r\n          })}\r\n        />\r\n        <input\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={maxVal}\r\n          ref={maxValRef}\r\n          onChange={(event: ChangeEvent<HTMLInputElement>) => {\r\n            const value = Math.max(+event.target.value, minVal + 1);\r\n            setMaxVal(value);\r\n            event.target.value = value.toString();\r\n          }}\r\n          className=\"thumb thumb--zindex-4\"\r\n        />\r\n  \r\n        <div className=\"slider\">\r\n          <div className=\"slider__track\"></div>\r\n          <div ref={range} className=\"slider__range\"></div>\r\n          <div className=\"slider__left-value\">{minVal}</div>\r\n          <div className=\"slider__right-value\">{maxVal}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default MultiRangeSlider;","\r\nimport \"./popup.css\";\r\n\r\nexport type PropsType={\r\n    handleClose: ()=>void\r\n    content: any\r\n}\r\n\r\nconst Popup = (props:PropsType) => {\r\n  return (\r\n    <div className=\"popup-box\">\r\n      <div className=\"box\">\r\n        <span className=\"close-icon\" onClick={props.handleClose}>x</span>\r\n        {props.content}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n \r\nexport default Popup;","export default __webpack_public_path__ + \"static/media/search.0e6e0283.svg\";","import { useState } from \"react\";\r\nimport search from '../assets/svg/search.svg'\r\nimport './searchinput.css'\r\n\r\ntype PopsType ={\r\n    searchToys: (value: string)=>void\r\n}\r\n\r\nconst SearchInput = (props:PopsType) => {\r\n    const [value, setValue]=useState('')\r\n    const onChangeValue =(e:any)=>{\r\n        setValue((e.target.value).toLocaleLowerCase().trim())\r\n        props.searchToys((e.target.value).toLowerCase().trim())\r\n    }\r\n\r\n    const cliearSearchInput =()=>{\r\n        setValue('')\r\n        props.searchToys('')\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n              <input type=\"text\" value={value} onChange={onChangeValue}  placeholder=\"Введите запрос\" className=\"search-field\"/> \r\n              <img src={search} alt=\"search-icon\" className=\"search-icon\" /> \r\n              <span className=\"search-close\" onClick={cliearSearchInput}>x</span>                    \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchInput","import { useState } from \"react\";\r\nimport \"./selectorToys.css\"\r\n\r\nconst SortToys = (props: any) => {\r\n    const [value, setValue]=useState('от А до Я')\r\n    const onChangeValue = (e: any)=>{\r\n        \r\n        setValue(e.target.value)\r\n        props.onChangeSortType(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <div className=\"select-wrapper\"> \r\n           <select value={value} onChange={onChangeValue} className=\"select-css\">\r\n               <option value='Сортировать'>Выберите способ сортировки</option>\r\n                <option value=\"От А до Я\">От А до Я</option>\r\n                <option value=\"От Я до А\">От Я до А</option>\r\n                <option value=\"по возростанию\">по возростанию</option>\r\n                <option value=\"по убыванию\">по убыванию</option>\r\n            </select>\r\n           <div className=\"select-arrov\"></div>                      \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SortToys","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { ReducerAppType } from \"../redux/store\";\r\nimport { getToys, ToyType, setFiltresArrAC, setSelectedTuysAC} from \"../redux/toysReducer\";\r\nimport FiltredToys, { colorType, formType, sizesType } from \"./filtredToys\";\r\nimport MultiRangeSlider from \"./multiRangeSlider\";\r\nimport Popup from \"./popup\";\r\nimport SearchInput from \"./searchInput\";\r\nimport SortToys from \"./selectorToys\";\r\nimport './toysPage.css'\r\n\r\n\r\nexport type filtersType = {\r\n   count?: Array<string>\r\n   year?: Array<string>,\r\n   shape?: Array<string>,\r\n   color?: Array<string>,\r\n   size?: Array<string>,\r\n   favorite?: Array<boolean>,\r\n   serch?: string\r\n}\r\n\r\nconst ToysPage = ()=>{\r\n  \r\n   const[filtres, setFiltres]= useState<filtersType>({\r\n      count: [],\r\n      year: [],\r\n      shape: [],\r\n      color: [],\r\n      size: [],\r\n      favorite: [],\r\n      serch: ''\r\n   })\r\n   const dispatch = useDispatch();\r\n   \r\n\r\n    const toys = useSelector<ReducerAppType,  Array<ToyType>>((store) => store.toys.toys);\r\n    const count = useSelector<ReducerAppType,  number | null>((store) => store.toys.count);\r\n    let filtredArrFromRedux = useSelector<ReducerAppType,  Array<ToyType>>((store) => store.toys.filtredArr);\r\n    const selectedArr = useSelector<ReducerAppType,  Array<ToyType>>((store) => store.toys.selectedArr);\r\n\r\n    const [filtredArr, setFiltredArr] = useState<Array<ToyType>>([])\r\n\r\n    useEffect(()=>{\r\n      setFiltredArr(filtredArrFromRedux)\r\n    }, [filtredArrFromRedux])\r\n\r\n   const changeFilter = (color?: string, form?: string, size?: string, isLik?: boolean) => {\r\n\r\n   }\r\n\r\n   const [isLike, setIsLike] = useState(false)\r\n\r\n   const filterFavorite = (favorite:boolean)=>{\r\n      setIsLike(favorite)\r\n      if(favorite){\r\n         setFiltres((prevState)=>{\r\n            return {\r\n               ...prevState,            \r\n               favorite: [...(prevState.favorite? prevState.favorite : []), favorite]\r\n            }\r\n         })\r\n      }else{\r\n         setFiltres((prevState)=>{\r\n            return {\r\n               ...prevState,\r\n               \r\n               favorite: []\r\n            }\r\n         })\r\n      }      \r\n   }\r\n\r\n   const [sizes, setSizes] = useState([\r\n      {size: 'большой', isClicked: false, path: 'big-clicked', name: 'big'}, \r\n      {size: 'средний', isClicked: false, path: 'medium-clicked', name: 'medium'}, \r\n      {size:'малый', isClicked: false, path: 'small-clicked', name: 'small'}, \r\n      \r\n  ])\r\n\r\n   const filterSize = (size:string, isClicked:boolean)=>{\r\n      const mapNewSizes = sizes.map( (el) => el.size === size ? {...el, isClicked: isClicked} : el  )\r\n      setSizes(mapNewSizes)\r\n      if(isClicked){\r\n         setFiltres((prevState)=>{\r\n            return {\r\n               ...prevState,               \r\n               size: [...(prevState.size? prevState.size : []), size]\r\n            }\r\n         })\r\n      }else{\r\n         setFiltres((prevState)=>{\r\n            return {\r\n               ...prevState,            \r\n               size: prevState.size?.filter(s=>s!==size)\r\n            }\r\n         })\r\n      }      \r\n   }\r\n\r\n\r\n   const [forms, setForms] = useState <Array<formType>>(\r\n      [\r\n      { form:'шар', isClicked: false, path: 'ball-clicked', name: 'ball'}, \r\n      { form: 'колокольчик', isClicked: false, path: 'bell-clicked', name: 'bell'}, \r\n      { form:'шишка', isClicked: false, path: 'cone-clicked', name: 'cone'}, \r\n      { form: 'снежинка', isClicked: false, path: 'snowflake-clicked', name: 'snowflake'}, \r\n      { form: 'фигурка', isClicked: false, path: 'figure-clicked', name: 'figure'}\r\n  ])\r\n  \r\n   const filterForm = (form:string, isClicked: boolean)=>{\r\n      const mapNewForms = forms.map( (el) => el.form === form ? {...el, isClicked: isClicked} : el  )\r\n      setForms(mapNewForms)\r\n      forms.filter(e=>e.isClicked!==true)     \r\n      if(isClicked){\r\n         setFiltres((prevState)=>{\r\n            return {\r\n               ...prevState,            \r\n               shape: [...(prevState.shape? prevState.shape : []), form]\r\n            }\r\n         })\r\n      }else{\r\n         setFiltres((prevState)=>{\r\n            return{\r\n               ...prevState,            \r\n               shape: prevState.shape?.filter(s=>s!==form)\r\n            }\r\n         })\r\n      }        \r\n   }\r\n\r\n\r\n      const [colors, setColors] = useState<Array<colorType>>([\r\n      {color:'красный',isChecked: false, name: 'red'}, \r\n      {color: 'белый', isChecked: false, name: 'white'}, \r\n      {color:'желтый', isChecked: false, name: 'yellow'}, \r\n      {color: 'синий', isChecked: false, name: 'blue'}, \r\n      {color: 'зелёный', isChecked: false, name: 'green'}\r\n   ])\r\n  \r\n  \r\n   const filterColor = (color: string, isChecked: boolean)=>{\r\n      const mapNewColors = colors.map((el) => el.color === color ? {...el, isChecked: isChecked} : el  )\r\n      setColors(mapNewColors)\r\n      if(isChecked){\r\n         setFiltres((prevState)=>{         \r\n            return {\r\n               ...prevState,               \r\n               color: [...(prevState.color? prevState.color : []), color]\r\n            }           \r\n         })   \r\n      }else{\r\n         setFiltres((prevState)=>{           \r\n            return {\r\n               ...prevState,               \r\n               color: prevState.color?.filter(c=>c!==color)\r\n            }\r\n         })\r\n      }      \r\n   }\r\n\r\n   useEffect(()=>{\r\n      let data: filtersType = {}\r\n      Object.keys(filtres).forEach((key)=>{\r\n         let x: keyof filtersType = key as keyof filtersType\r\n         if(filtres && filtres[x]?.length !==0){           \r\n         data[x]=filtres[x] as Array <string & boolean> & string            \r\n         }\r\n      }) \r\n      data.serch=filtres.serch  \r\n      dispatch(setFiltresArrAC(data))\r\n      \r\n   }, [filtres])\r\n\r\n   const filterCount = useCallback(({ min, max }: { min: number; max: number })=>{\r\n      const counts = [] as string[];\r\n      for (let i = min; i <= max; i++){\r\n         counts.push(`${i}`);\r\n      }\r\n      setFiltres((prevState)=>{\r\n         return {\r\n            ...prevState,            \r\n            count: [...counts]\r\n         }\r\n      })\r\n   }, [])\r\n\r\n   const filterYear = useCallback(({ min, max }: { min: number; max: number })=>{\r\n      const counts = [] as string[];\r\n      for (let i = min; i <= max; i++){\r\n         counts.push(`${i}`);\r\n      }\r\n      setFiltres((prevState)=>{\r\n         return {\r\n            ...prevState,            \r\n            year: [...counts]\r\n         }\r\n      })\r\n   }, [])\r\n\r\n   const setSelectedToys=(num:string, isSelected: boolean)=>{\r\n      if(selectedArr.length < 20 || !isSelected){\r\n         dispatch(setSelectedTuysAC(num, isSelected)) \r\n      } else{\r\n         setIsOpen(true);\r\n      }\r\n\r\n   }\r\n\r\n  \r\n   const resetSettings =()=>{\r\n      setFiltres({})\r\n      let mapArrSizes = sizes.map( (el) => ({...el, isClicked: false}))\r\n      setSizes(mapArrSizes)\r\n      let mapArrColors = colors.map((el)=>({...el, isChecked: false}))\r\n      setColors(mapArrColors)\r\n      let mapArrForms = forms.map((el)=>({...el, isClicked: false}))\r\n      setForms(mapArrForms)\r\n      setIsLike(false)\r\n      // dispatch(resetSettingsAC())   \r\n   }\r\n   const searchToys =(value: string)=>{\r\n      setFiltres({...filtres, serch: value})\r\n   }\r\n\r\n   const [filter, setFilter]=useState('')\r\n\r\n   const onChangeSortType=(value:string)=>{\r\n     setFilter(value)   \r\n   } \r\n\r\n   const [isOpen, setIsOpen]= useState(false)\r\n   const [isActive, setIsActive] = useState(false)\r\n   \r\n   \r\n   useEffect(()=>{\r\n      if(filtredArr.length===0 && toys.length!==0){\r\n         setIsActive(true)\r\n      }else{\r\n         setIsActive(false)\r\n      }\r\n\r\n   },[filtredArr])\r\n\r\n\r\n   const closeSecondPopup=()=>{\r\n      setIsActive(false)\r\n   }\r\n\r\n const closePopup = ()=>{\r\n     setIsOpen(false)\r\n }\r\n\r\n   return (\r\n      <div className=\"toys-page-wrapper\">\r\n         <div className=\"toys-page-container\">\r\n            <div className=\"filtres-container\">\r\n            <FiltredToys \r\n               changeFilter = {changeFilter}  \r\n               filterForm = {filterForm} \r\n               filterColor ={filterColor} \r\n               filterSize={filterSize} \r\n               filterFavorite={filterFavorite}\r\n               sizes = {sizes} \r\n               forms = {forms}\r\n               colors={colors}\r\n               isLike={isLike}\r\n            />\r\n           \r\n            <div className=\"toys-page-option\">\r\n               <h2>Фильтры по диапазону</h2> \r\n               <div className=\"countFilter\">    \r\n                  <p>Количество экземпляров:</p>  \r\n                  <MultiRangeSlider min={1} max={12} onChange={filterCount} /> \r\n               </div>\r\n               <div className=\"yersFilter\">          \r\n                  <p>Год приобретения:</p>  \r\n                  <MultiRangeSlider min={1940} max={2020} onChange={filterYear} /> \r\n               </div>\r\n            </div>\r\n            <div className=\"searchFilter\">\r\n             <h2>Сортировка</h2>\r\n              <SearchInput searchToys = {searchToys} />\r\n              <SortToys onChangeSortType = {onChangeSortType} />\r\n               <div>\r\n                  <button onClick={resetSettings} className=\"reset-button\">Сбросить фильтры</button>\r\n              </div>   \r\n            </div> \r\n            </div>\r\n            \r\n\r\n           <ul className=\"toys-container\">{filtredArr || filter ? filtredArr.sort((a: ToyType,b:ToyType)=>{\r\n              if(filter ==='От А до Я'){\r\n               if(a.name<b.name){\r\n                  return -1\r\n               }\r\n               if(a.name>b.name){\r\n                  return 1\r\n               }\r\n              }\r\n              if(filter=== 'От Я до А'){\r\n                 if(a.name>b.name){\r\n                    return -1\r\n                 }\r\n                 if(a.name<b.name){\r\n                    return 1\r\n                 }\r\n              }\r\n              if(filter==='по возростанию'){\r\n                  return +a.count - +b.count                \r\n              }\r\n              if(filter === 'по убыванию'){\r\n                 return +b.count - +a.count\r\n              }\r\n              return 0\r\n            \r\n           }).map((el, i)=>{            \r\n              return <li key={el.num} className=\"toys-card\" onClick={()=>setSelectedToys(el.num, !el.isSelect)}>\r\n                 <h2>{el.name}</h2>\r\n                 <div>\r\n                    \r\n                        <img src={`https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/toys/${el.num}.png`} alt={el.name} />\r\n   \r\n                    <ul className=\"toys-option\">\r\n                       <li><span>Колличество:</span><span> {el.count}</span></li>\r\n                       <li><span>Год выпуска:</span><span> {el.year}</span></li>\r\n                       <li><span>Форма:</span><span> {el.shape}</span></li>\r\n                       <li><span>Цвет:</span><span> {el.color}</span></li>\r\n                       <li><span>Размер:</span><span> {el.size}</span></li>\r\n                       <li><span>Любимая:</span><span> {el.favorite? ' да': ' нет'}</span></li>\r\n                       <li><button className={el.isSelect ?\"toys-card-button-select\": \"toys-card-button\"}>{el.isSelect ? 'Удалить из выбранных' : 'Добавить в выбранные'}</button></li>\r\n                    </ul>\r\n                 </div>\r\n              </li>\r\n           }): toys}</ul>\r\n         </div>\r\n         {isOpen&&<Popup content = {\"Извините, все слоты заполнены\"} handleClose={closePopup}/>}\r\n         {isActive&&<Popup content={\"Извините, совпадений не обнаружено\"} handleClose={closeSecondPopup}/>}      \r\n      </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default ToysPage","const Snow = () => {\r\n\r\n    return (\r\n    <div className=\"snow-container\">\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n        <div className=\"snow1\">❅</div>\r\n  </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default Snow\r\n\r\n","export default __webpack_public_path__ + \"static/media/audio.12ff3f91.mp3\";","import React, { useEffect, useRef, useState, DragEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ReducerAppType } from \"../redux/store\";\r\nimport './christmasTreePage.css';\r\nimport Snow from \"./snow\";\r\n\r\nimport { getToys, ToyType } from \"../redux/toysReducer\";\r\nimport url from './audio.mp3'\r\n\r\n\r\n\r\n\r\n\r\nconst TreePage = ()=>{\r\n   const toys = useSelector<ReducerAppType,  Array<ToyType>>((store) => store.toys.toys);\r\n   const selectedArr = useSelector<ReducerAppType,  Array<ToyType>>((store) => store.toys.selectedArr);\r\n   const dispatch = useDispatch();\r\n\r\n   const [background, setBackground]=useState([\r\n      {id: 1, path: 'bg1', isClicked: false},\r\n      {id: 2, path: 'bg2', isClicked: false},\r\n      {id: 3, path: 'bg3', isClicked: false},\r\n      {id: 4, path: 'bg4', isClicked: false},\r\n      {id: 5, path: 'bg5', isClicked: false},\r\n      {id: 6, path: 'bg6', isClicked: false},\r\n      {id: 7, path: 'bg7', isClicked: false},\r\n      {id: 8, path: 'bg8', isClicked: false},\r\n      {id: 9, path: 'bg9', isClicked: false},\r\n      {id: 10, path: 'bg10', isClicked: false}\r\n   ])\r\n   const [tree, setTree]=useState([\r\n      {id: 1, path: 'tree1', isClicked: false},\r\n      {id: 2, path: 'tree2', isClicked: false},\r\n      {id: 3, path: 'tree3', isClicked: false},\r\n      {id: 4, path: 'tree4', isClicked: false},\r\n      {id: 5, path: 'tree5', isClicked: false},\r\n      {id: 6, path: 'tree6', isClicked: false}\r\n   ])\r\n   \r\n\r\n   const bgAsString = Number(localStorage.getItem('bg'))\r\n   \r\n   const [bg, setBg]= useState<number>(bgAsString ? bgAsString: 1)\r\n   const treeNumAsString = Number(localStorage.getItem('treeNum'))\r\n   const [treeNum, setTreeNum]= useState<number>(treeNumAsString ? treeNumAsString : 1)\r\n\r\n   const onChangeBg = (id: number, isClicked: boolean)=>{\r\n      let mapBg = background.map((el) => el.id === id ? {...el, isClicked: isClicked} : el )\r\n      setBackground(mapBg)\r\n      setBg(id)\r\n      \r\n   }\r\n   const onChangeTree = (id: number, isClicked: boolean)=>{\r\n      let mapTree = background.map((el) => el.id === id ? {...el, isClicked: isClicked} : el )\r\n      setBackground(mapTree)\r\n      setTreeNum(id)\r\n     \r\n   }\r\n\r\n   \r\n  const isPlaingAsString = Boolean(localStorage.getItem('isPlaing'))\r\n\r\n   const [isPlaing, setIsplaing]= useState(false)\r\n\r\n   const [audio, setAudio]=useState( new Audio(url))\r\n\r\n   useEffect(()=>{\r\n      audio.load()\r\n   },[])\r\n\r\n const onPlayHandler = () => {  \r\n   audio.play();\r\n   setIsplaing(true)\r\n   \r\n };\r\n\r\n const  onPauseHandler = () => { \r\n   audio.pause()\r\n   setIsplaing(false)\r\n   \r\n  };\r\n   \r\n   const [isSnow, setIsSnow]= useState(false)\r\n   const onChangeSnow = ()=>{\r\n      setIsSnow(!isSnow)\r\n  }\r\n \r\n  useEffect(() => {\r\n   dispatch(getToys()) \r\n   \r\n }, []);\r\n\r\n const arrForDropAsString = localStorage.getItem('arr')\r\n\r\n const arr: ToyType[] = JSON.parse(arrForDropAsString as string)\r\n const [arrForDrop, setArrForDrop]= useState<Array<ToyType>>(arr ? arr : [])\r\n\r\n useEffect (()=>{\r\n   const toysArrForDrag = toys.slice(0, 20)\r\n   if(selectedArr.length===0){\r\n      \r\n      setArrForDrop(toysArrForDrag.map(el=>({...el, count: +el.count})))\r\n      \r\n   } else{\r\n      setArrForDrop(selectedArr.map(el=>({...el, count: +el.count})))\r\n   }\r\n   \r\n}, [toys])\r\n\r\n\r\nconst saveState =()=>{\r\n   const arrForDropAsString = JSON.stringify(arrForDrop)\r\n   const bgAsString = JSON.stringify(bg)\r\n   const treeNumAsString = JSON.stringify(treeNum)\r\n   const isPlaingAsString = JSON.stringify(isPlaing)\r\n   localStorage.setItem('arr', arrForDropAsString)\r\n   localStorage.setItem('bg', bgAsString)\r\n   localStorage.setItem('treeNum', treeNumAsString)\r\n   localStorage.setItem('isPlaing', isPlaingAsString)\r\n}\r\n\r\nconst clearFilters = ()=>{\r\n   localStorage.clear()\r\n}\r\n\r\nuseEffect(()=>{\r\n\r\n   saveState()\r\n\r\n}, [bg, treeNum, isPlaing, arrForDrop])\r\n\r\nconst [currentToy, setCurrentToy] = useState<ToyType | null>(null)\r\nconst [board, setBoard]= useState<Array<any>>([])\r\nconst [key, setKey]= useState<string>()\r\n\r\nconst dragStartHandler =(e:DragEvent<HTMLImageElement>, toy: ToyType, key: string)=>{ \r\n   setKey(key)\r\n   setCurrentToy(toy)  \r\n}\r\n\r\nconst dragOverHandler = (e:DragEvent<HTMLDivElement>)=>{\r\n   e.preventDefault()\r\n}\r\nconst allowDrop = (event: React.DragEvent<HTMLDivElement>) => {\r\n   event.preventDefault();\r\n };\r\n\r\n\r\nconst dropHandler = (e:DragEvent<HTMLImageElement>|DragEvent<HTMLAreaElement>)=>{\r\n   \r\n const width1: number| undefined = document.querySelector<HTMLDivElement>('.tree-page-container')!.offsetWidth\r\n\r\n const width2: number| undefined=document.querySelector<HTMLDivElement>('.selected-background')!.offsetWidth\r\n\r\n const width3: number| undefined =document.querySelector<HTMLDivElement>('.tree-toys-container')!.offsetWidth\r\n\r\n const width4  = document.querySelector<HTMLDivElement>('.tree-filters')!.offsetWidth\r\n const width: number = width1 - width2  -width3 - width4\r\n   \r\n   e.preventDefault()\r\n   \r\n   const x =board.find((b)=>{\r\n      return b.key === key\r\n   }) \r\n\r\n   if(!x){\r\n      setBoard([...board, { toy:currentToy,\r\n        \r\n      x: e?.clientX - (width/2 + 20  + width4),\r\n       y: e?.clientY + window.scrollY - 150,\r\n      key: key}])\r\n   }else {\r\n      //переместили  \r\n      x.x = e?.clientX - (width/2 + 20 + width4)\r\n      x.y=e?.clientY + window.scrollY - 150\r\n      setBoard([...board])\r\n   }\r\n  \r\n  let newArr= arrForDrop.map((el) => el.num === currentToy?.num ? {...el, count: +el.count - 1} : el )\r\n  setArrForDrop(newArr)\r\n}\r\n\r\nconst dropForLi =(e:DragEvent<HTMLImageElement>|DragEvent<HTMLDivElement>)=>{\r\n   e.preventDefault()\r\n   const x =board.find((b)=>{\r\n      return b.key === key\r\n   }) \r\n   if(x){\r\n      setBoard(board.filter(b=>b.key!==key))\r\n\r\n      let newArr= arrForDrop.map((el) => el.num === currentToy?.num ? {...el, count: +el.count + 1} : el )\r\n      setArrForDrop(newArr)\r\n   }\r\n  \r\n}\r\n   return (\r\n        <div className=\"tree-page\">\r\n           <div className=\"tree-page-container\">\r\n               <div className=\"tree-filters\">\r\n                  <ul className=\"effect-container\">\r\n                     <li className={!isPlaing ? \"audio\" : \"close\"} onClick={isPlaing ? onPauseHandler :onPlayHandler}></li>\r\n                     <li className={!isSnow? \"snow\" : \"un-snow\"} onClick={onChangeSnow}></li>\r\n                     <li><button onClick={clearFilters}  className=\"tree-btn\">Очистить фильтры</button></li>\r\n                  </ul>\r\n                  <div>\r\n                     <h2>Выберите елку</h2>\r\n                     <ul className=\"tree-container\">\r\n                      {tree.map(t=><li key={t.id} className={t.path} onClick={()=>onChangeTree(t.id, !t.isClicked)} >\r\n                         <img src={`https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/tree/${t.id}.png`} alt=\"tree\" />\r\n                      </li>)}\r\n                     </ul>\r\n                  </div>\r\n                  <div>\r\n                     <h2>Выберите фон</h2>\r\n                     <ul className=\"bg-container\">\r\n                        {background.map(b=> \r\n                        <li key={b.id} className={b.path} onClick={()=>onChangeBg(b.id, !b.isClicked)}>\r\n                           <img src={`https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/bg/${b.id}.jpg`} alt=\"picture\"/>\r\n                        </li>)}\r\n                     </ul>\r\n                  </div>\r\n                  <div>\r\n                     <h2>Гирлянда</h2>\r\n                  </div>\r\n            </div>\r\n            <div className=\"selected-background\" style={{backgroundImage: `url(https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/bg/${bg}.jpg)`}}> \r\n               {isSnow?<Snow />: ''}\r\n\r\n               <map name=\"tree-map\">\r\n               \r\n                  <area \r\n                  //@ts-ignore\r\n                  onDragOver={allowDrop}\r\n                  onDrop={(e:DragEvent<HTMLAreaElement>)=>dropHandler(e)} shape=\"poly\" coords=\"365,699,189,706,113,683,31,608,2,555,2,539,18,437,73,351,106,224,161,134,243,-1,306,75,353,144,399,221,424,359,452,459,496,550,444,664\">\r\n                  </area>\r\n               </map>\r\n              <div \r\n              //onDragOver={allowDrop} \r\n              //onDrop={(e:any)=>dropHandler(e)}\r\n              >\r\n              <img    useMap=\"#tree-map\" src={`https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/tree/${treeNum}.png`} alt=\"tree\" />\r\n               \r\n               {board.map(t=>{       \r\n                       return <img key={t.key} src={`https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/toys/${t.toy.num}.png`} \r\n                       onDragStart = {(e:DragEvent<HTMLImageElement>)=>dragStartHandler(e, t.toy, t.key)} \r\n                       onDragOver={(e:DragEvent<HTMLImageElement>)=>dragOverHandler(e)} \r\n                       onDrop={(e:DragEvent<HTMLImageElement>)=>dropHandler(e)}\r\n                       style={{top: t.y, left: t.x, position: \"absolute\"}}\r\n                       className='img-for-drag'/>\r\n                    })}\r\n              </div>\r\n              \r\n            </div>\r\n            <div \r\n               onDragOver={allowDrop} \r\n               onDrop={(e:DragEvent<HTMLDivElement>)=>dropForLi(e)}\r\n            >\r\n               <div className=\"tree-toys-container\">\r\n                  <h2>Игрушки</h2>\r\n                  <ul className=\"drag-toys-container\"> \r\n                    {arrForDrop.map(t=>{\r\n                     return <li key={t.num}  className=\"drag-toys-card\" >{t.count > 0 ? <img \r\n                     src={`https://raw.githubusercontent.com/adzinetskatsiaryna/christmas-data/main/assets/toys/${t.num}.png`} \r\n                     className='img-for-drag'\r\n                     onDragStart = {(e:DragEvent<HTMLImageElement>)=>dragStartHandler(e, t, t.num +''+ t.count + ''+ Math.random())} \r\n                     //onDragOver={(e:any)=>dragOverHandler(e)} \r\n                     //onDrop={(e:any)=>dropHandler(e)}\r\n                     draggable={true}\r\n         />  \r\n                     \r\n                     : null}\r\n                            <span className=\"drag-toys-count\">{t.count <= 0? '0': t.count}</span>\r\n                     </li>\r\n                    })\r\n                    }\r\n                  </ul>\r\n               </div>\r\n            </div>\r\n           </div>\r\n            \r\n        </div>\r\n    )\r\n};\r\nexport default TreePage\r\n\r\n\r\n\r\nfunction dispatch(arg0: (dispatch: import(\"redux\").Dispatch<import(\"redux\").AnyAction>) => void) {\r\n   throw new Error(\"Function not implemented.\");\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Route} from \"react-router-dom\";\r\nimport StartPage from \"./startPage\";\r\nimport ToysPage from \"./toysPage\";\r\nimport ThreePage from \"./christmasTreePage\";\r\n\r\nexport const START_PATH = '/start';\r\nexport const TOYS_PATH = '/toys';\r\nexport const TREE_PATH = '/tree';\r\n\r\n\r\n\r\n\r\nconst Routs = ()=>{\r\n    return (\r\n        <div>\r\n            <Route exact path = {'/'} render={()=> <StartPage/>} />\r\n            <Route  path = {START_PATH} render={()=> <StartPage/>} />\r\n            <Route  path = {TOYS_PATH} render={()=> <ToysPage/>} />\r\n            <Route  path = {TREE_PATH} render={()=> <ThreePage/>} />\r\n        </div>\r\n    )\r\n}\r\nexport default Routs","\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {START_PATH, TOYS_PATH, TREE_PATH} from \"./routs\";\r\nimport './header.css'\r\nimport { useSelector } from \"react-redux\";\r\nimport { ReducerAppType } from \"../redux/store\";\r\nimport { ToyType } from \"../redux/toysReducer\";\r\n\r\n\r\nconst Header = () => {\r\n    const doc = window.document\r\n    const linksCount = doc.links.length \r\n    for (let i = 0; i < linksCount; i++)\r\n    if(doc.URL.startsWith(doc.links[i].href))\r\n    doc.links[i].classList.add('active') \r\n\r\n    const selectedArr = useSelector<ReducerAppType,  Array<ToyType>>((store) => store.toys.selectedArr);\r\n   \r\n    return (\r\n        <div>\r\n            <div className=\"header-wrapper\"> \r\n                <div className='header-container'>\r\n                <div>\r\n                    <NavLink to={START_PATH}> <span className=\"links logo\"></span></NavLink>\r\n                    <NavLink to={TOYS_PATH} className=\"links toys-link\">ИГРУШКИ</NavLink> \r\n                    <NavLink to={TREE_PATH} className=\"links tree-link\">ЕЛКИ</NavLink> \r\n                </div>    \r\n                <div className=\"count\">{selectedArr.length===0? '0' :selectedArr.length}</div>\r\n            </div>                       \r\n            </div>\r\n           \r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default Header","import React from 'react';\r\nimport './footer.css'\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <footer>\r\n          <div className='footer-container'>\r\n              <span>Adzinets Katsiaryna</span>\r\n              <a href='https://github.com/adzinetskatsiaryna?tab=repositories'className='link-gh-pages' target=\"_blank\"></a>\r\n              <a href='https://rs.school/' className='link-rss' target=\"_blank\"></a>  \r\n          </div>\r\n        </footer>\r\n        \r\n    )\r\n};\r\n\r\nexport default Footer","import React, { useEffect } from 'react';\r\nimport './App.css';\r\nimport Header from './components/header';\r\nimport Routs from './components/routs';\r\nimport Footer from './components/footer';\r\nimport { HashRouter as Router } from \"react-router-dom\"\r\nimport { useDispatch } from 'react-redux';\r\nimport { getToys } from './redux/toysReducer';\r\n\r\n\r\nfunction App() {\r\n  let dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getToys()) \r\n    \r\n  }, []);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n        <Router>\r\n          <Header/>\r\n          <Routs />      \r\n        </Router>\r\n        <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport ToysReducer from \"./toysReducer\";\r\nimport thunk from \"redux-thunk\";\r\n//import TreeReducer from \"./treeReducer\";\r\n\r\n\r\n\r\nconst reducer = combineReducers({\r\n    toys: ToysReducer,\r\n    // tree: TreeReducer,\r\n});\r\nexport type ReducerAppType = ReturnType<typeof reducer>\r\n\r\nexport const store = createStore(reducer, applyMiddleware(thunk));\r\n\r\n// @ts-ignore\r\nwindow.store = store\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}